(define-module (giqt packages giqt))

(use-modules ((guix licenses) #:prefix license:)
             (giqt packages g-golf)
             (giqt packages qt)
             (gnu packages autotools)
             (gnu packages certs)
             (gnu packages glib)
             (gnu packages gnome)
             (gnu packages gtk)
             (gnu packages guile)
             (gnu packages guile-xyz)
             (gnu packages linux)
             (gnu packages lisp)
             (gnu packages lisp-xyz)
             (gnu packages nss)
             (gnu packages pkg-config)
             (gnu packages python)
             (guix build-system gnu)
             (guix git-download)
             (guix packages)
             (guix utils))

(define-public giqt
  (let ((commit "4856f48ef34dffc5cff2deaa623c8417ef77f972"))
    (package (name "giqt")
             (version (git-version "0.0.1-alpha" "53" commit))
             (source (origin (method git-fetch)
                             (uri (git-reference (url "https://github.com/mrosset/giqt.git")
                                                 (commit commit)))
                             (file-name (git-file-name name version))
                             (sha256 (base32 "1dvavqwgzlavn2lc8yg9crmbr1vqak5wfz8xywq96c5if274caw7"))))
             (build-system gnu-build-system)
             (arguments
              `(#:phases
                (modify-phases %standard-phases
                  (delete 'check))))

             (native-inputs `(("autoconf" ,autoconf)
                              ("automake" ,automake)
                              ("pkg-config" ,pkg-config)
                              ("python" ,python)
                              ("libtool" ,libtool)))
             (inputs `(("glib" ,glib)
                       ("python" ,python)
                       ("guile" ,guile-2.2)
                       ("guile-lib" ,guile-lib)
                       ("sbcl" ,sbcl)
                       ("gtk+" ,gtk+)
                       ("gobject" ,gobject-introspection)
                       ("g-golf" ,g-golf)
                       ;; FIXME:
                       ("eudev" ,eudev)
                       ;; FIXME:
                       ("nss" ,nss)
                       ("gjs" ,gjs)
                       ("nss-certs" ,nss-certs)
                       ("sbcl-prove" ,sbcl-prove)
                       ("sbcl-cl-gobject-introspection" ,sbcl-cl-gobject-introspection)))
             (propagated-inputs `(("qt", qt)))
             ;; FIXME: This hack allows qt to find nss libraries and giqt to find g-golf libraries.
             ;; (native-search-paths
             ;;  (list (search-path-specification
             ;;         (file-type 'directory)
             ;;         (separator ":")
             ;;         (variable "LD_LIBRARY_PATH")
             ;;         (files '("lib")))
             ;;        (search-path-specification
             ;;         (file-type 'directory)
             ;;         (separator ":")
             ;;         (variable "LD_LIBRARY_PATH")
             ;;         (files '("lib/nss")))))
             (synopsis "GObject bindings for QT")
             (description "GIQT allows creating QT programs with the same programming interfaces as GTK")
             (home-page "https://github.com/mrosset/giqt")
             (license license:gpl3+))))
